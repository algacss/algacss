@define refs {
  name: menu;
}

@define props {
  type: custom, tab;
}

@alga {refs.name} {
  .nav, .{refs.name} {
    ref: display-flex flexWrap-wrap paddingLeft-0 paddingRight-0 margin-0 listStyle-none;
  }
    
  .{refs.name} {
    ref: flexDirection-column;
  }
    
  .nav > .item > .link,
  .{refs.name} > .item > .link {
    ref: display-block padding-0.675rem_1rem borderRadius-0.25rem color-hex2f2f2f;
    ref: textDecoration-none cursor-default;
    ref-transition: color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out;
    prefers-dark: color-inherit;
    prefers-toDark: color-inherit;
    prefers-toLight: color-hex2f2f2f;
  }
    
  .nav > .item:hover > .link,
  .{refs.name} > .item:hover > .link {
    ref: backgroundColor-hexededed;
    prefers-dark: backgroundColor-hex5f5f5f;
    prefers-toDark: backgroundColor-hex5f5f5f;
    prefers-toLight: backgroundColor-hexededed;
  }
    
  .nav > .item.active > .link,
  .{refs.name} > .item.active > .link {
    ref: backgroundColor-hex0d6efd color-hexfff;
  }
    
  .{refs.name} > .item > .link {
    ref: paddingTop-0.75rem paddingBottom-0.75rem;
  }
    
  .nav.fill > .item {
    ref: flex-1_1_auto textAlign-center;
  }
  
  @if type has custom {
    .nav.custom > .item > .link {
      ref: borderTop-2px_solid_transparent borderBottom-4px_solid_transparent;
    }
    
    .{refs.name}.custom > .item > .link {
      ref: borderRight-2px_solid_transparent borderLeft-4px_solid_transparent;
    }
    
    .nav.custom > .item:not(.active):hover > .link {
      ref: borderBottomColor-hex7d8ca4 backgroundColor-hexf1f2f3 color-hex363d46;
      prefers-dark: backgroundColor-hex2f2f2f color-inherit;
      prefers-toDark: backgroundColor-hex2f2f2f color-inherit;
      prefers-toLight: backgroundColor-hexf6f8f9 color-hex363d46;
    }
    
    .nav.custom > .item.active > .link {
      ref: borderBottomColor-hex0d6efd backgroundColor-hexebf4ff color-hex0d6efd;
      prefers-dark: backgroundColor-hex2f2f2f;
      prefers-toDark: backgroundColor-hex2f2f2f;
      prefers-toLight: backgroundColor-hexebf4ff;
    }
    
    .{refs.name}.custom > .item:not(.active):hover > .link {
      ref: borderLeftColor-hex7d8ca4 backgroundColor-hexf6f8f9 color-hex363d46;
      prefers-dark: backgroundColor-hex2f2f2f color-inherit;
      prefers-toDark: backgroundColor-hex2f2f2f color-inherit;
      prefers-toLight: backgroundColor-hexf6f8f9 color-hex363d46;
    }
    
    .{refs.name}.custom > .item.active > .link {
      ref: borderLeftColor-hex0d6efd backgroundColor-hexebf4ff color-hex0d6efd;
      prefers-dark: backgroundColor-hex2f2f2f;
      prefers-toDark: backgroundColor-hex2f2f2f;
      prefers-toLight: backgroundColor-hexebf4ff;
    }
  }
  
  @if type has tab {
    .nav.tab {
      ref: borderBottom-1px_solid_hexdee2e6;
      prefers-dark: borderBottomColor-hex5f5f5f;
      prefers-toDark: borderBottomColor-hex5f5f5f;
      prefers-toLight: borderBottomColor-hexdee2e6;
    }
    
    .nav.tab > .item > .link {
      ref: borderRadius-0px borderTopLeftRadius-0.25rem borderTopRightRadius-0.25rem backgroundColor-transparent;
      ref: border-1px_solid_transparent marginBottom-n1px;
    }
    
    .nav.tab > .item:not(.active):hover > .link {
      ref: backgroundColor-hexededed;
      prefers-dark: backgroundColor-hex5f5f5f;
      prefers-toDark: backgroundColor-hex5f5f5f;
      prefers-toLight: backgroundColor-hexededed;
    }
    
    .nav.tab > .item.active > .link {
      ref: color-inherit backgroundColor-hexfff borderColor-hexdee2e6_hexdee2e6_transparent;
      prefers-dark: backgroundColor-hex2f2f2f borderColor-hex5f5f5f_hex5f5f5f_transparent;
      prefers-toDark: backgroundColor-hex2f2f2f borderColor-hex5f5f5f_hex5f5f5f_transparent;
      prefers-toLight: backgroundColor-hexfff borderColor-hexdee2e6_hexdee2e6_transparent;
    }
  }
  
}
