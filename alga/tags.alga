@define props {
  type: tag, tagInput, badge;
  menu: 10;
}

@alga tags {
  
  @if type has tag {
    .tag {
      ref: display-inlineFlex alignItems-center borderRadius-0.375rem textDecoration-none cursor-pointer;
      ref: backgroundColor-hexf2f2f2 color-hex2f2f2f fontSize-0.75rem lineHeight-1.5 fontWeight-bold;
      ref-padding: 3px 10px;
      ref-border: 1px solid #d9d9d9;
      prefers-dark: backgroundColor-hex2f2f2f color-hexfff borderColor-hex5f5f5f;
      prefers-toDark: backgroundColor-hex2f2f2f color-hexfff borderColor-hex5f5f5f;
      prefers-toLight: backgroundColor-hexf2f2f2 color-hex2f2f2f borderColor-hexd9d9d9;
    }
    
    .tag.groupItem:first-child {
      ref: cursor-default;
    }
    
    .tag.groupItem:last-child {
      ref: paddingRight-5px paddingLeft-5px cursor-pointer;
    }
    
    .tag.groupItem svg {
      ref: pointerEvents-none;
    }
    
    .tags {
      ref: display-inlineFlex flexWrap-wrap justifyContent-flexStart gap-0.5rem;
    }
  }  
  
  @if type has tagInput {
    .taggable {
      ref: width-auto;
    }
      
    .tagWrap {
      ref: display-block position-relative;
    }
     
    .tagBackdrop {
      ref: position-fixed zIndex-74 inset-0_3em_3em_0 width-100vw height-100vh display-none;
    }
      
    .taggable.active .tagBackdrop {
      ref: display-block;
    }
      
    .input.tagToggler {
      ref: padding-0.5rem display-flex justifyContent-flexStart;
    }
    
    .tagInput {
      ref: backgroundColor-transparent borderColor-transparent width-100px outline-0;
    }
      
    .tagContent {
      ref: position-absolute zIndex-75 top-100pct left-0 backgroundColor-hexfff border-1px_solid_hexd9d9d9;
      ref: width-100pct borderRadius-0.375rem overflowY-auto display-none borderTopWidth-0px;
      ref-maxHeight: calc({props.menu} * 36px);
      prefers-dark: backgroundColor-hex2f2f2f borderColor-hex5f5f5f;
      prefers-toDark: backgroundColor-hex2f2f2f borderColor-hex5f5f5f;
      prefers-toLight: backgroundColor-hexfff borderColor-hexd9d9d9;
      
      .tagItem {
        ref: display-block padding-0.675rem_0.75rem borderBottom-1px_solid_hexd9d9d9;
        ref: textDecoration-none color-hex283541 cursor-pointer;
        prefers-dark: borderBottomColor-hex5f5f5f color-hexf2f2f2;
        prefers-toDark: borderBottomColor-hex5f5f5f color-hexf2f2f2;
        prefers-toLight: borderBottomColor-hexd9d9d9 color-hex283541;
      }
      
      .tagItem:last-child {
        ref: borderBottom-0;
      }
      
      .tagItem:hover {
        ref: backgroundColor-hexededed;
        prefers-dark: backgroundColor-hex242424;
        prefers-toDark: backgroundColor-hex242424;
        prefers-toLight: backgroundColor-hexededed;
      }
    }
    
    .taggable.active .input.tagToggler {
      ref: borderBottomRightRadius-0 borderBottomLeftRadius-0;
    }
    
    .taggable.active .tagContent {
      ref: borderTopRightRadius-0 borderTopLeftRadius-0 display-block;
    }
  }
  
  @if type has badge {
    .badge {
      ref: display-inline marginTop-0px marginLeft-0.15rem padding-3px_7.5px;
      ref: borderRadius-0.375rem textDecoration-none backgroundColor-hex283541;
      ref: color-hexfff fontSize-0.75rem fontWeight-bold;
    }
    
    .badgeTop {
      ref: marginTop-n0.375rem;
    }
    
    .badgeRound {
      ref: borderRadius-99px;
    }
  }
}
