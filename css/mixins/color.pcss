@define-mixin color-mixin $class, $main, $text {
  .$(main) {
    color: var(--txtColor, $text);
    background-color: var(--$(main));
    border-color: var(--$(main));
  }
    
  .outlined$(class) {
    color: var(--txtColor, $main);
    background-color: var(--transparent);
    border-color: var(--$(main));
  }
    
  .filled$(class) {
    color: var(--txtColor, $text);
    background-color: var(--$(main));
    border-color: var(--$(main))
  }
    
  .bg$(class) {
    background-color: var(--$(main));
  }
    
  .txt$(class) {
    --txtColor: var(--$(main));
    color: var(--txtColor);
  }
    
  .bd$(class) {
    border-color: var(--$(main));
  }
    
  .bdTop$(class) {
    border-top-color: var(--$(main));
  }
    
  .bdRight$(class) {
    border-right-color: var(--$(main));
  }
    
  .bdBottom$(class) {
    border-bottom-color: var(--$(main));
  }
    
  .bdLeft$(class) {
    border-left-color: var(--$(main));
  }
    
  .caret$(class) {
    caret-color: var(--$(main));
  }
    
  .outline$(class) {
    outline-color: var(--$(main));
  }
    
  .fill$(class) {
    fill: var(--$(main));
  }
    
  .stroke$(class) {
    stroke: var(--$(main));
  }
    
  .placeholder$(class)::placeholder {
    --placeholderColor: var(--$(main));
    color: var(--placeholderColor);
  }
}

@define-mixin color-state $class, $state, $main, $text {
  .$(main)\.$(state):$(state) {
    color: var(--txtColor, $text);
    background-color: var(--$(main));
    border-color: var(--$(main));
  }
    
  .outlined$(class)\.$(state):$(state) {
    color: var(--txtColor, $main);
    background-color: var(--transparent);
    border-color: var(--$(main));
  }
    
  .filled$(class)\.$(state):$(state) {
    color: var(--txtColor, $text);
    background-color: var(--$(main));
    border-color: var(--$(main))
  }
    
  .bg$(class)\.$(state):$(state) {
    background-color: var(--$(main));
  }
    
  .txt$(class)\.$(state):$(state) {
    --txtColor: var(--$(main));
    color: var(--txtColor);
  }
    
  .bd$(class)\.$(state):$(state) {
    border-color: var(--$(main));
  }
    
  .bdTop$(class)\.$(state):$(state) {
    border-top-color: var(--$(main));
  }
    
  .bdRight$(class)\.$(state):$(state) {
    border-right-color: var(--$(main));
  }
    
  .bdBottom$(class)\.$(state):$(state) {
    border-bottom-color: var(--$(main));
  }
    
  .bdLeft$(class)\.$(state):$(state) {
    border-left-color: var(--$(main));
  }
    
  .caret$(class)\.$(state):$(state) {
    caret-color: var(--$(main));
  }
    
  .outline$(class)\.$(state):$(state) {
    outline-color: var(--$(main));
  }
    
  .fill$(class)\.$(state):$(state) {
    fill: var(--$(main));
  }
    
  .stroke$(class)\.$(state):$(state) {
    stroke: var(--$(main));
  }
    
  .placeholder$(class)\.$(state):$(state)::placeholder {
    --placeholderColor: var(--$(main));
    color: var(--placeholderColor);
  }
}

@define-mixin color-dark $dark, $class, $main, $text {
  .$(dark) .$(main) {
    color: var(--txtDarkColor, $text);
    background-color: var(--$(main));
    border-color: var(--$(main));
  }
    
  .$(dark) .outlined$(class) {
    color: var(--txtDarkColor, $main);
    background-color: var(--transparent);
    border-color: var(--$(main));
  }
    
  .$(dark) .filled$(class) {
    color: var(--txtDarkColor, $text);
    background-color: var(--$(main));
    border-color: var(--$(main));
  }
    
  .$(dark) .bg$(class) {
    background-color: var(--$(main));
  }
    
  .$(dark) .txt$(class) {
    --txtDarkColor: var(--$(main));
    color: var(--txtDarkColor);
  }
    
  .$(dark) .bd$(class) {
    border-color: var(--$(main));
  }
    
  .$(dark) .bdTop$(class) {
    border-top-color: var(--$(main));
  }
    
  .$(dark) .bdRight$(class) {
    border-right-color: var(--$(main));
  }
    
  .$(dark) .bdBottom$(class) {
    border-bottom-color: var(--$(main));
  }
    
  .$(dark) .bdLeft$(class) {
    border-left-color: var(--$(main));
  }
    
  .$(dark) .caret$(class) {
    caret-color: var(--$(main));
  }
    
  .$(dark) .outline$(class) {
    outline-color: var(--$(main));
  }
    
  .$(dark) .fill$(class) {
    fill: var(--$(main));
  }
    
  .$(dark) .stroke$(class) {
    stroke: var(--$(main));
  }
    
  .$(dark) .placeholder$(class)::placeholder {
    --placeholderDarkColor: var(--$(main));
    color: var(--placeholderDarkColor);
  }
}
